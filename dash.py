import streamlit as st
import pandas as pd
import plotly.express as px
import json
import re
from datetime import datetime, timedelta
import random

# Настройки страницы
st.set_page_config(layout="wide", page_title="Аналитика отзывов о Газпромбанке")

# Заголовок
st.title("Аналитика отзывов о Газпромбанке")

# Новый словарь категорий с подкатегориями
banking_categories = {
    'Повседневные финансы и платежи': {
        'Карты': {
            'keywords': ['дебет', 'кредитн', 'зарплатн', 'премиальн', 'кэшбэк', 'бонус', 'пластик', 'карточк', 'виза', 'мастеркард', 'мир', 'бесконтактн', 'nfc', 'овердрафт', 'перевыпуск', 'блокировк', 'смс-банк', 'интернет-банк', 'именн', 'доставк'],
            'phrases': ['дебетовая карта', 'кредитная карта', 'зарплатная карта', 'премиальная карта', 'оформить карту', 'выпустить карту', 'доставка карты', 'заблокировать карту', 'разблокировать карту', 'сменить пин-код', 'льготный период', 'бесконтактная оплата', 'овердрафт на карту']
        },
        'Счета': {
            'keywords': ['расчетн', 'текущ', 'валютн', 'рублёв', 'долларов', 'евров', 'открыт', 'закрыт', 'веден', 'сберегательн', 'накопит', 'обезличен', 'металлическ', 'процент', 'остаток', 'реквизит', 'выписк', 'архивн'],
            'phrases': ['открыть счет', 'расчетный счет', 'текущий счет', 'валютный счет', 'закрыть счет', 'сберегательный счет', 'накопительный счет', 'выписка по счету', 'реквизиты счета', 'процент на остаток', 'обезличенный металлический счет']
        },
        'Переводы': {
            'keywords': ['перевод', 'отправ', 'получен', 'межбанк', 'внутрибанк', 'сбербанк', 'альфа', 'тинькофф', 'моментальн', 'систем', 'быстр', 'денежн', 'средств', 'комисс', 'лимит', 'отозв', 'сбп', 'sbp'],
            'phrases': ['денежный перевод', 'перевод между счетами', 'перевод в другой банк', 'мгновенный перевод', 'межбанковский перевод', 'внутрибанковский перевод', 'система быстрых платежей', 'перевод по номеру телефона', 'отозвать перевод', 'комиссия за перевод']
        },
        'Мобильный и онлайн-банк': {
            'keywords': ['мобильн', 'приложен', 'онлайн', 'интернет', 'смс', 'уведомлен', 'оплат', 'qr', 'push', 'интерфейс', 'личн', 'кабинет', 'настро', 'безопасн', 'вход', 'парол', 'биометр', 'подпис', 'token'],
            'phrases': ['мобильное приложение', 'интернет банк', 'оплата через приложение', 'смс информирование', 'личный кабинет', 'настройки безопасности', 'вход по отпечатку', 'qr-код для оплаты', 'push-уведомления', 'электронная подпись']
        },
        'Отделения и банкоматы': {
            'keywords': ['отделен', 'банкомат', 'очеред', 'операционист', 'снят', 'внесен', 'налич', 'касс', 'терминал', 'платежн', 'адрес', 'график', 'работ', 'обслуживан', 'инкассац', 'переполнен', 'не работ'],
            'phrases': ['отделение банка', 'банкомат гпб', 'снять наличные', 'внести деньги', 'очередь в банке', 'адрес отделения', 'график работы отделения', 'банкомат не работает', 'внести наличные через банкомат', 'оплатить через терминал']
        },
        'Платежи и коммунальные услуги': {
            'keywords': ['оплат', 'платеж', 'коммунал', 'жкх', 'квитанц', 'штраф', 'госпошлин', 'налоги', 'пен', 'суд', 'аванс', 'автоплатеж', 'шаблон', 'избран', 'ерц', 'гибдд', 'фнс'],
            'phrases': ['оплата коммунальных услуг', 'оплатить жкх', 'оплата штрафов', 'оплата налогов', 'настроить автоплатеж', 'платежные шаблоны', 'оплата госпошлины', 'квитанция на оплату']
        }
    },
    'Сбережения и накопления': {
        'Вклады': {
            'keywords': ['вклад', 'депозит', 'срочн', 'пополняем', 'снимаем', 'процент', 'ставк', 'пролонгац', 'капитализ', 'досрочн', 'частичн', 'снят', 'пополнен', 'минимальн', 'сумм', 'открыт', 'закрыт'],
            'phrases': ['срочный вклад', 'открыть вклад', 'пополняемый вклад', 'процентная ставка', 'закрыть вклад', 'вклад с капитализацией', 'досрочное снятие', 'пролонгация вклада', 'минимальная сумма вклада']
        },
        'Накопительные счета': {
            'keywords': ['накопит', 'сберегательн', 'остаток', 'начислен', 'ежемесячн', 'процент', 'снят', 'пополнен', 'льготн', 'услов', 'открыт', 'закрыт', 'доходност'],
            'phrases': ['накопительный счет', 'сберегательный счет', 'процент на остаток', 'снять без потерь', 'пополнить накопительный счет', 'условия по накопительному счету', 'закрыть накопительный счет']
        },
        'Металлические счета': {
            'keywords': ['металл', 'золот', 'серебр', 'платин', 'паллад', 'слитк', 'грамм', 'унц', 'обезличен', 'куп', 'прода', 'котировк', 'металлич', 'оцм', 'ломбард'],
            'phrases': ['металлический счет', 'обезличенный металл', 'купить золото', 'продать серебро', 'котировки металлов', 'открыть металлический счет', 'слиток золота', 'ломбардный кредит под металлы']
        },
        'Сберегательные сертификаты': {
            'keywords': ['сертификат', 'сберегательн', 'предъявитель', 'именн', 'срок', 'погашен', 'процент', 'ставк', 'купон', 'дисконт'],
            'phrases': ['сберегательный сертификат', 'именной сертификат', 'погашение сертификата', 'процент по сертификату', 'сертификат на предъявителя']
        },
        'Целевые накопления': {
            'keywords': ['целев', 'накоплен', 'цель', 'сбережен', 'сбережен', 'автоматическ', 'план', 'срок', 'сумм', 'достижен', 'отслеживан'],
            'phrases': ['целевые накопления', 'накопить на цель', 'автоматическое пополнение', 'план накоплений', 'отслеживание целей']
        }
    },
    'Кредитование': {
        'Потребительские кредиты': {
            'keywords': ['потребительск', 'наличн', 'целев', 'нецелев', 'одобрен', 'отказ', 'ставк', 'срок', 'заявк', 'анкет', 'решен', 'погашен', 'досрочн', 'реструктуризац', 'просрочк', 'задолженност', 'коллектор'],
            'phrases': ['потребительский кредит', 'кредит наличными', 'нецелевой кредит', 'одобрение кредита', 'подать заявку на кредит', 'досрочное погашение', 'реструктуризация кредита', 'просрочка по кредиту']
        },
        'Ипотека': {
            'keywords': ['ипотек', 'квартир', 'дом', 'недвиж', 'ипотечн', 'первоначальн', 'взнос', 'рефинансирован', 'залог', 'оценк', 'страховк', 'сделк', 'аккредитив', 'материнск', 'капитал', 'льготн', 'господдержк'],
            'phrases': ['ипотечный кредит', 'взять ипотеку', 'первоначальный взнос', 'рефинансирование ипотеки', 'ипотека на вторичное жилье', 'ипотека на новостройку', 'материнский капитал в ипотеку', 'льготная ипотека']
        },
        'Автокредиты': {
            'keywords': ['автокредит', 'авто', 'машин', 'автомобил', 'нов', 'б/у', 'салон', 'дилер', 'страховк', 'каско', 'первоначальн', 'взнос', 'залог', 'кредитован'],
            'phrases': ['автомобильный кредит', 'кредит на машину', 'новый автомобиль', 'подержанный автомобиль', 'автокредит у дилера', 'первоначальный взнос по автокредиту', 'оформить каско']
        },
        'Кредитные карты': {
            'keywords': ['кредитн', 'карт', 'льготн', 'период', 'лимит', 'кэшбэк', 'снят', 'наличн', 'грейс', 'процент', 'ставк', 'заявк', 'одобрен', 'перевыпуск', 'обслуживан', 'льгот'],
            'phrases': ['кредитная карта', 'льготный период', 'снятие наличных', 'кредитный лимит', 'оформить кредитную карту', 'процентная ставка по карте', 'беспроцентный период', 'обслуживание кредитной карты']
        },
        'Рефинансирование': {
            'keywords': ['рефинансирован', 'объединен', 'кредит', 'перекредитован', 'реструктуризац', 'снижен', 'платеж', 'выгодн', 'процент', 'ставк', 'заявк', 'услов', 'экономи'],
            'phrases': ['рефинансирование кредитов', 'объединить кредиты', 'перекредитоваться', 'снизить платеж', 'рефинансирование ипотеки', 'выгодное рефинансирование', 'экономия на процентах']
        },
        'Микрозаймы и экпресс-кредиты': {
            'keywords': ['микрозайм', 'экспресс', 'быстр', 'кредит', 'заем', 'срочн', 'деньг', 'онлайн', 'заявк', 'мгновен', 'одобрен', 'перевод', 'карт'],
            'phrases': ['микрозайм онлайн', 'экспресс-кредит', 'срочный заем', 'деньги до зарплаты', 'мгновенное одобрение', 'заем на карту']
        }
    },
    'Инвестиции': {
        'Брокерское обслуживание': {
            'keywords': ['брокер', 'счет', 'торгов', 'бирж', 'заявк', 'ордер', 'комисс', 'тариф', 'лиценз', 'управляющ', 'клиринг', 'депозитар', 'услуг'],
            'phrases': ['брокерский счет', 'торговый счет', 'открыть брокерский счет', 'тарифы брокера', 'брокерское обслуживание', 'торговля на бирже', 'комиссия брокера', 'депозитарные услуги']
        },
        'ИИС': {
            'keywords': ['иис', 'индивидуальн', 'инвест', 'вычет', 'налог', 'тип', 'а', 'б', 'открыт', 'пополн', 'закрыт', 'макс', 'сумм', 'вычет', 'возврат'],
            'phrases': ['индивидуальный инвестиционный счет', 'иис тип а', 'налоговый вычет', 'открыть иис', 'пополнить иис', 'закрыть иис', 'налоговый вычет по иис', 'максимальная сумма на иис']
        },
        'ПИФы': {
            'keywords': ['пиф', 'пай', 'фонд', 'паев', 'покупк', 'продаж', 'управляющ', 'стоимость', 'наименован', 'паев', 'отчетност', 'диверсификац', 'доходност'],
            'phrases': ['паевой фонд', 'купить паи', 'продать паи', 'управляющая компания', 'стоимость пая', 'отчетность пиф', 'диверсификация через пифы']
        },
        'Акции': {
            'keywords': ['акци', 'дивиденд', 'голуб', 'фишк', 'рост', 'паден', 'котировк', 'лот', 'портфель', 'бай', 'селл', 'ордер', 'лимитн', 'рыночн', 'дивидендн', 'политик'],
            'phrases': ['покупка акций', 'дивидендные акции', 'голубые фишки', 'котировки акций', 'торговля акциями', 'лимитная заявка', 'дивидендная политика', 'портфель акций']
        },
        'Облигации': {
            'keywords': ['облигац', 'купон', 'офз', 'корпоративн', 'доходност', 'погашен', 'номинал', 'офер', 'купонн', 'доход', 'рейтинг', 'риск'],
            'phrases': ['государственные облигации', 'корпоративные облигации', 'купонный доход', 'погашение облигаций', 'доходность к погашению', 'облигации с офертой', 'рейтинг облигаций']
        },
        'Структурные продукты': {
            'keywords': ['структурн', 'защит', 'капитал', 'доходност', 'риск', 'сложн', 'производн', 'инструмент', 'дериватив', 'фьючерс', 'опцион', 'своп'],
            'phrases': ['структурный продукт', 'защита капитала', 'сложные инвестиции', 'производные инструменты', 'торговля фьючерсами', 'хеджирование рисков']
        },
        'Доверительное управление': {
            'keywords': ['доверительн', 'управлен', 'портфель', 'стратег', 'доходност', 'риск', 'управляющ', 'отчет', 'комисс', 'успешн'],
            'phrases': ['доверительное управление', 'передать в управление', 'инвестиционный портфель', 'стратегия управления', 'отчетность по управлению']
        },
        'Альтернативные инвестиции': {
            'keywords': ['венчур', 'стартап', 'недвиж', 'крауд', 'инвест', 'проект', 'рискован', 'высок', 'доходност'],
            'phrases': ['венчурные инвестиции', 'инвестиции в стартапы', 'краудфандинг', 'инвестиции в недвижимость', 'высокорискованные инвестиции']
        }
    },
    'Страхование и защита': {
        'Страхование имущества': {
            'keywords': ['имуществ', 'квартир', 'дом', 'дача', 'ремонт', 'затоплен', 'пожар', 'краж', 'грабеж', 'стихи', 'бедств', 'полис', 'страхов', 'случа', 'выплат'],
            'phrases': ['страхование квартиры', 'страхование дома', 'от затопления', 'от пожара', 'страхование дачи', 'страховой случай', 'выплата по страховке']
        },
        'Страхование авто': {
            'keywords': ['каско', 'осаго', 'авто', 'машин', 'дтп', 'авария', 'угон', 'ущерб', 'страхов', 'компани', 'полис', 'осаг', 'европротокол'],
            'phrases': ['страхование автомобиля', 'полис каско', 'полис осаго', 'страховой случай дтп', 'оформить осаго', 'европротокол', 'страхование от угона']
        },
        'Медицинское страхование': {
            'keywords': ['медицинск', 'здоров', 'дмс', 'лечен', 'врач', 'больничн', 'госпитализац', 'стоматолог', 'поликлиник', 'страхов', 'случа', 'выплат'],
            'phrases': ['медицинская страховка', 'добровольное медицинское страхование', 'страхование здоровья', 'полис дмс', 'страхование от критических заболеваний']
        },
        'Страхование путешествий': {
            'keywords': ['путешеств', 'тур', 'отмен', 'загран', 'виза', 'медицин', 'помощ', 'эвакуац', 'багаж', 'отмен', 'задержк', 'рейс'],
            'phrases': ['страхование путешественников', 'страховка для выезда за рубеж', 'отмена поездки', 'медицинская эвакуация', 'страхование багажа', 'страхование от невыезда']
        },
        'Страхование жизни': {
            'keywords': ['жизн', 'несчастн', 'случа', 'травм', 'инвалидност', 'смерт', 'накопительн', 'страхов', 'программ', 'выплат'],
            'phrases': ['страхование жизни', 'от несчастных случаев', 'страхование на случай смерти', 'накопительное страхование жизни', 'страховая программа']
        },
        'Страхование финансовых рисков': {
            'keywords': ['ипотек', 'кредит', 'заемщ', 'невыплат', 'потеря', 'работ', 'трудоспособност', 'гарант'],
            'phrases': ['страхование ипотеки', 'страхование кредита', 'на случай потери работы', 'страхование заемщика']
        }
    },
    'Премиальные услуги': {
        'Private Banking': {
            'keywords': ['приват', 'премиум', 'вип', 'персонал', 'менеджер', 'эксклюзив', 'состоян', 'обслуживан', 'высок', 'уровен', 'клиент', 'льгот', 'услов'],
            'phrases': ['приват банкинг', 'премиальное обслуживание', 'персональный менеджер', 'вип клиент', 'обслуживание для состоятельных клиентов', 'эксклюзивные продукты']
        },
        'Депозитарные ячейки': {
            'keywords': ['депозитар', 'ячейк', 'сейф', 'хранен', 'ценност', 'драгоценност', 'документ', 'аренд', 'доступ', 'код', 'ключ'],
            'phrases': ['депозитарная ячейка', 'аренда сейфа', 'хранение ценностей', 'банковская ячейка', 'сейф для документов', 'доступ к ячейке']
        },
        'Финансовое планирование': {
            'keywords': ['финансов', 'планирован', 'консультирован', 'совет', 'рекомендац', 'стратег', 'пенсион', 'обеспечен', 'бюджет', 'сбережен', 'инвест'],
            'phrases': ['финансовое планирование', 'инвестиционная стратегия', 'финансовый советник', 'пенсионное планирование', 'составление бюджета', 'планирование сбережений']
        },
        'Управление капиталом': {
            'keywords': ['управлен', 'капитал', 'актив', 'портфель', 'диверсификац', 'оптимизац', 'налог', 'эффектив', 'распределен', 'доходност', 'риск'],
            'phrases': ['управление капиталом', 'инвестиционный портфель', 'диверсификация активов', 'оптимизация налогов', 'управление активами', 'сбалансированный портфель']
        },
        'Эксклюзивные предложения': {
            'keywords': ['эксклюзив', 'предложен', 'доступ', 'закрыт', 'клуб', 'мероприят', 'встреч', 'семинар', 'приглашен'],
            'phrases': ['эксклюзивные предложения', 'закрытые мероприятия', 'клуб вип-клиентов', 'встречи с экспертами', 'специальные условия']
        }
    },
    'Пенсионное и социальное обеспечение': {
        'Пенсионные программы': {
            'keywords': ['пенсион', 'накоп', 'накопительн', 'программ', 'социальн', 'обеспечен', 'взнос', 'выплат', 'солидарн', 'накопительн', 'часть'],
            'phrases': ['пенсионные накопления', 'негосударственное пенсионное обеспечение', 'пенсионная программа', 'накопительная часть пенсии', 'солидарная система']
        },
        'Социальные карты': {
            'keywords': ['социальн', 'карт', 'пенсионер', 'студент', 'школьн', 'льгот', 'проезд', 'скидк', 'транспорт', 'соц'],
            'phrases': ['социальная карта', 'карта пенсионера', 'льготный проезд', 'студенческая карта', 'социальные льготы']
        }
    },
    'Бизнес-услуги': {
        'Расчетно-кассовое обслуживание': {
            'keywords': ['рко', 'расчетн', 'кассов', 'обслуживан', 'бизнес', 'счет', 'юридическ', 'лиц', 'ип', 'оборот', 'лимит', 'снят', 'внесен'],
            'phrases': ['расчетно-кассовое обслуживание', 'рко для бизнеса', 'открыть счет для ип', 'обслуживание юридических лиц', 'лимиты по счету']
        },
        'Бизнес-карты': {
            'keywords': ['бизнес', 'карт', 'корпоративн', 'сотрудник', 'расход', 'отчет', 'лимит', 'кэшбэк', 'премиальн'],
            'phrases': ['бизнес-карта', 'корпоративная карта', 'карта для сотрудников', 'учет расходов', 'отчетность по картам']
        },
        'Торговый эквайринг': {
            'keywords': ['эквайринг', 'торгов', 'терминал', 'оплат', 'карт', 'онлайн', 'магазин', 'комисс', 'оборудован'],
            'phrases': ['торговый эквайринг', 'онлайн-эквайринг', 'терминал для оплаты', 'подключение эквайринга', 'комиссия за эквайринг']
        },
        'Зарплатные проекты': {
            'keywords': ['зарплатн', 'проект', 'сотрудник', 'карт', 'перечислен', 'зарплат', 'бюджет', 'отчет'],
            'phrases': ['зарплатный проект', 'обслуживание сотрудников', 'перечисление зарплат', 'зарплатные карты', 'отчетность по зарплатному проекту']
        }
    },
    'Валютные операции': {
        'Обмен валюты': {
            'keywords': ['обмен', 'валют', 'покупк', 'продаж', 'курс', 'доллар', 'евро', 'рубл', 'конвертац', 'наличн', 'безналичн'],
            'phrases': ['обмен валюты', 'курс доллара', 'покупка евро', 'продажа долларов', 'конвертация валюты', 'безналичный обмен']
        },
        'Международные переводы': {
            'keywords': ['международ', 'перевод', 'swift', 'зарубеж', 'валют', 'контрол', 'отчет', 'комисс'],
            'phrases': ['международный перевод', 'swift перевод', 'перевод за рубеж', 'отчетность по переводам']
        }
    },
    'Цифровые продукты и инновации': {
        'Открытие счета онлайн': {
            'keywords': ['открыт', 'счет', 'онлайн', 'удален', 'без', 'визит', 'отделен', 'документ', 'идентификац', 'биометр'],
            'phrases': ['открыть счет онлайн', 'удаленное открытие счета', 'без визита в отделение', 'идентификация по биометрии']
        },
        'Цифровая ипотека': {
            'keywords': ['цифров', 'ипотек', 'онлайн', 'оформлен', 'удален', 'сделк', 'электрон', 'подпис'],
            'phrases': ['цифровая ипотека', 'оформить ипотеку онлайн', 'удаленное оформление сделки', 'электронная подпись для ипотеки']
        },
        'Open Banking': {
            'keywords': ['open banking', 'api', 'интеграц', 'данн', 'доступ', 'сторон', 'приложен', 'безопас'],
            'phrases': ['открытое банковское обслуживание', 'api банка', 'интеграция с банком', 'доступ к данным']
        }
    }
}

# Обратное сопоставление подкатегорий к категориям
SUBCAT_TO_CAT = {}
for cat, subcats in banking_categories.items():
    for subcat in subcats:
        SUBCAT_TO_CAT[subcat] = cat

# Собираем все подкатегории и категории
ALL_CATEGORIES = list(banking_categories.keys())
ALL_SUBCATEGORIES = [sub for subs in banking_categories.values() for sub in subs.keys()]

# Лексикон тональности
SENTIMENT_LEXICON = {
    'positive': {
        'отличн': 2, 'хорош': 2, 'прекрасн': 2, 'быстр': 1, 'удобн': 1, 'понятн': 1,
        'рекоменд': 2, 'довол': 2, 'спасиб': 2, 'рад': 2, 'легк': 1, 'приятн': 1,
        'качествен': 2, 'профессионал': 2, 'оператив': 1, 'четк': 1, 'прозрачн': 1,
        'выгодн': 2, 'надежн': 2, 'лучш': 2, 'супер': 2, 'замечательн': 2, 'впечатл': 2,
        'удовлетворен': 2, 'понравилось': 2, 'нравится': 2, 'вовремя': 1, 'своевремен': 1,
        'гладко': 1, 'эффективн': 1, 'без проблем': 2, 'не плохо': 1, 'без ошибок': 2,
    },
    'negative': {
        'плох': -2, 'ужасн': -3, 'медлен': -2, 'неудобн': -2, 'сложн': -2, 'не нравится': -3,
        'проблем': -2, 'ошибк': -2, 'глюк': -2, 'зависа': -2, 'не работ': -3, 'отказ': -2,
        'обман': -3, 'дорог': -2, 'комисс': -1, 'долг': -2, 'неясн': -1, 'неполадк': -2,
        'недовол': -2, 'разочарован': -3, 'кошмар': -3, 'зависает': -2, 'виснет': -2, 'тупит': -2,
        'лагает': -2, 'маленьк': -1
    }
}

NEGATION_WORDS = {'не', 'нет', 'ни', 'без', 'нельзя', 'невозможно', 'никак', 'ничуть'}

def classify_sentiment(text):
    text = text.lower()
    score = 0
    words = re.findall(r'\w+', text)
    for i, word in enumerate(words):
        for sentiment, lex in SENTIMENT_LEXICON.items():
            for key, val in lex.items():
                if key in word:
                    adjusted_val = val
                    if i > 0 and words[i-1] in NEGATION_WORDS:
                        adjusted_val = -adjusted_val
                    score += adjusted_val
                    break
    if score > 0.5:
        return 'положительно'
    elif score < -0.5:
        return 'отрицательно'
    else:
        return 'нейтрально'

def extract_topic_from_fragment(fragment):
    """Возвращает подкатегорию если найдена, иначе 'Другое'"""
    fragment = fragment.lower()
    words = set(re.findall(r'\w+', fragment))
    
    for category, subcats in banking_categories.items():
        for subcat, data in subcats.items():
            if any(kw in fragment for kw in data['phrases']) or any(w in words for w in data['keywords']):
                return subcat  # Возвращаем подкатегорию
    return 'Другое'

def random_review_date():
    start = datetime(2024, 1, 1)
    end = datetime(2025, 5, 31)
    delta = end - start
    random_days = random.randrange(delta.days + 1)
    return (start + timedelta(days=random_days)).strftime('%d.%m.%Y')

def process_review(review):
    text = review.get('text', '')
    id = review.get('id', 0)
    
    # Разбиваем на части по союзам-разделителям
    parts = re.split(r'\b(но|зато|однако|а также|при этом|и|но при этом)\b', text, flags=re.IGNORECASE)
    fragments = []
    for i in range(0, len(parts), 2):
        frag = parts[i].strip()
        if i + 1 < len(parts):
            frag += ' ' + parts[i+1].strip()
        if frag:
            fragments.append(frag.strip())
    
    if not fragments:
        fragments = [text]
    
    topics = []
    sentiments = []
    
    for frag in fragments:
        topic = extract_topic_from_fragment(frag)
        if topic == 'Другое' and len(fragments) > 1:
            continue  # Пропускаем 'Другое' если есть другие фрагменты
        sentiment = classify_sentiment(frag)
        topics.append(topic)
        sentiments.append(sentiment)
    
    # Если все 'Другое', оставляем один
    if all(t == 'Другое' for t in topics):
        topics = ['Другое']
        sentiments = [classify_sentiment(text)]
    
    # Удаляем дубликаты тем
    unique = list(dict.fromkeys(zip(topics, sentiments)))
    topics, sentiments = zip(*unique) if unique else (['Другое'], [classify_sentiment(text)])
    
    # Определяем rating
    if len(set(sentiments)) > 1:
        rating = 3
    else:
        first_sent = sentiments[0]
        if first_sent == 'положительно':
            rating = 5
        elif first_sent == 'отрицательно':
            rating = 1
        else:
            rating = 3
    
    return {
        'id': id,
        'text': text,
        'topics': ', '.join(topics),
        'sentiments': ', '.join(sentiments),
        'product_category': ', '.join(topics),
        'date': random_review_date(),
        'rating': rating,
        'author': review.get('author', 'Клиент банка'),
        'source': 'gold'
    }

@st.cache_data
def load_data(uploaded_file):
    if uploaded_file is not None:
        try:
            data = json.load(uploaded_file)
            if 'data' in data and isinstance(data['data'], list):
                predictions = [process_review(review) for review in data['data']]
                df = pd.DataFrame(predictions)
                if not df.empty:
                    df['date'] = pd.to_datetime(df['date'], format='%d.%m.%Y')
                    st.info(f"Загружено {len(df)} отзывов")
                    return df
        except Exception as e:
            st.error(f"Ошибка при загрузке JSON: {e}")
    st.error("Неверный формат JSON. Ожидается {'data': [{'id': 1, 'text': '...'}]}")
    return pd.DataFrame()

# Сайдбар
st.sidebar.header("Загрузка и фильтры")
uploaded_json = st.sidebar.file_uploader("Загрузите JSON с отзывами", type=['json'])

if uploaded_json:
    df = load_data(uploaded_json)
    if not df.empty:
        st.sidebar.header("Фильтры")
        min_date = df['date'].min().date()
        max_date = df['date'].max().date()
        start_date = st.sidebar.date_input("Начальная дата", min_date, min_value=min_date, max_value=max_date)
        end_date = st.sidebar.date_input("Конечная дата", max_date, min_value=min_date, max_value=max_date)

        rating_filter = st.sidebar.slider("Рейтинг", min_value=1, max_value=5, value=(1, 5))

        selected_categories = st.sidebar.multiselect("Категории", options=ALL_CATEGORIES, default=[])

        if selected_categories:
            available_subcategories = [sub for cat in selected_categories for sub in banking_categories.get(cat, [])]
            selected_subcategories = st.sidebar.multiselect("Подкатегории", options=available_subcategories, default=[])
        else:
            selected_subcategories = []

        # Фильтрация
        mask = (df['date'].dt.date >= start_date) & (df['date'].dt.date <= end_date) & (df['rating'].between(*rating_filter))
        
        if selected_categories:
            mask &= df['product_category'].str.contains('|'.join(selected_categories), case=False, na=False)
        if selected_subcategories:
            mask &= df['product_category'].str.contains('|'.join(selected_subcategories), case=False, na=False)

        filtered_df = df[mask].copy()

        # Вывод
        st.subheader("📝 Подробные отзывы")
        st.dataframe(filtered_df[['id', 'text', 'topics', 'sentiments', 'rating', 'date']])

        # Тональность
        st.subheader("😊 Распределение тональности")
        if not filtered_df.empty:
            exploded = filtered_df.copy()
            exploded['sentiments_list'] = exploded['sentiments'].str.split(', ')
            exploded = exploded.explode('sentiments_list')
            sentiment_counts = exploded['sentiments_list'].value_counts()
            fig_sentiment = px.pie(
                names=sentiment_counts.index,
                values=sentiment_counts.values,
                title="Тональность отзывов",
                color=sentiment_counts.index,
                color_discrete_map={'положительно': '#90EE90', 'отрицательно': '#FF6347', 'нейтрально': '#D3D3D3'}
            )
            st.plotly_chart(fig_sentiment, use_container_width=True)

        # Распределение по категориям
        st.subheader("📋 Распределение по категориям продуктов")
        if not filtered_df.empty:
            exploded_cat = filtered_df.copy()
            exploded_cat['cat_list'] = exploded_cat['product_category'].str.split(', ')
            exploded_cat = exploded_cat.explode('cat_list')
            exploded_cat = exploded_cat[exploded_cat['cat_list'] != 'Другое']
            if len(selected_categories) == 1:
                # Показываем подкатегории для выбранной категории
                exploded_cat = exploded_cat[exploded_cat['cat_list'].apply(lambda x: SUBCAT_TO_CAT.get(x.strip(), '') == selected_categories[0])]
            else:
                # Агрегируем по основным категориям
                exploded_cat['cat_list'] = exploded_cat['cat_list'].apply(lambda x: SUBCAT_TO_CAT.get(x.strip(), ''))
            cat_counts = exploded_cat['cat_list'].value_counts()
            fig_cat = px.bar(
                x=cat_counts.index,
                y=cat_counts.values,
                title="Категории продуктов",
                labels={'x': 'Категория', 'y': 'Количество отзывов'}
            )
            st.plotly_chart(fig_cat, use_container_width=True)

        # Динамика отзывов по датам
        st.subheader("📅 Динамика отзывов по датам (по темам)")
        if not filtered_df.empty:
            exploded_df = filtered_df.assign(topic=filtered_df['topics'].str.split(', ')).explode('topic')
            exploded_df = exploded_df[exploded_df['topic'] != 'Другое']
            if len(selected_categories) == 1:
                # Показываем подкатегории для выбранной категории
                exploded_df = exploded_df[exploded_df['topic'].apply(lambda x: SUBCAT_TO_CAT.get(x.strip(), '') == selected_categories[0])]
            else:
                # Агрегируем по основным категориям
                exploded_df['topic'] = exploded_df['topic'].apply(lambda x: SUBCAT_TO_CAT.get(x.strip(), ''))
            exploded_df['date_str'] = exploded_df['date'].dt.date.astype(str)
            count_by_date_topic = exploded_df.groupby(['date_str', 'topic']).size().reset_index(name='count')
            fig_date = px.line(
                count_by_date_topic,
                x='date_str',
                y='count',
                color='topic',
                title="Динамика количества отзывов по датам и темам",
                labels={'date_str': 'Дата', 'count': 'Количество отзывов', 'topic': 'Тема'}
            )
            st.plotly_chart(fig_date, use_container_width=True)
    else:
        st.write("Нет данных для анализа.")
else:
    st.sidebar.warning("Загрузите JSON с отзывами для анализа")
    st.write("Загрузите JSON с отзывами в сайдбаре.")
