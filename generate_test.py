import json
import random
from datetime import datetime, timedelta

# Список разнообразных шаблонов (расширенный)
templates = [
    "Отличное обслуживание в отделении Газпромбанка, но мобильное приложение часто зависает.",
    "Кредитную карту одобрили быстро, но лимит оказался слишком маленьким.",
    "Вклад в Газпромбанке принес хороший доход, но проценты могли бы быть выше.",
    "Страховка путешественников покрывает все риски, сервис на уровне.",
    "Мобильный банк удобен, но иногда возникают проблемы с оплатой.",
    "Ипотечный кредит оформили быстро, но условия могли быть мягче.",
    "Обслуживание в отделении ужасное, очередь огромная.",
    "Перевод денег через приложение прошел без проблем.",
    "Зарплатная карта удобна, но комиссия за снятие наличных высокая.",
    "Инвестиции через Газпромбанк принесли убытки, советник не помог.",
    "Сейфовая ячейка надежна, но доступ ограничен по времени.",
    "Рефинансирование кредита прошло гладко, ставка приемлемая.",
    "Мобильное приложение вылетает, поддержка не отвечает.",
    "Автокредит одобрили, но проценты выше, чем обещали.",
    "Страхование имущества спасло от убытков, спасибо банку.",
    "Дебетовая карта удобна, кэшбэк радует.",
    "Интернет-банк работает медленно, нужно улучшить.",
    "Обмен валюты в банке выгодный, курс хороший.",
    "Кредитная история испорчена из-за их ошибок.",
    "Премиум-обслуживание оправдало ожидания, персонал вежлив.",
    "Выплата по страховке задерживается, неприятный опыт.",
    "Депозитный счет открыл легко, проценты радуют.",
    "Менеджер помог с инвестициями, результат пока нейтральный.",
    "Снятие наличных в банкомате прошло без комиссии.",
    # Добавьте еще шаблоны, если нужно (минимум 20-30 для разнообразия)
]

# Генерируем случайные даты в диапазоне 01.01.2024 - 31.05.2025
start_date = datetime(2024, 1, 1)
end_date = datetime(2025, 5, 31)
date_range = (end_date - start_date).days

reviews = []
for i in range(1, 251):
    # Случайная дата
    random_days = random.randint(0, date_range)
    random_date = start_date + timedelta(days=random_days)
    date_str = random_date.strftime('%d.%m.%Y')
    
    # Случайный отзыв
    text = random.choice(templates)
    
    reviews.append({"id": i, "text": text, "date": date_str})  # Добавляем дату для симуляции

# Создаем JSON для API (без даты, так как API не использует её)
api_data = {"data": [{"id": r["id"], "text": r["text"]} for r in reviews]}

# Сохраняем API-тестовый файл
with open(r'C:\Users\danil\OneDrive\Документы\gazprombank_reviews_sravni\test_250_reviews.json', 'w', encoding='utf-8') as f:
    json.dump(api_data, f, ensure_ascii=False, indent=2)

# Симулируем сохранение в CSV (с датами) для дашборда (запустите API после, чтобы обновить реальный CSV)
# Но для теста: создадим фейковый CSV с разнообразными датами
fake_csv_data = []
for r in reviews:
    fake_csv_data.append({
        'text': r['text'],
        'topics': 'Обслуживание, Мобильное приложение',  # Пример
        'sentiments': 'положительно, отрицательно',
        'date': r['date'],
        'rating': random.randint(1, 5),
        'source': 'test',
        'id': r['id'],
        'author': 'Тестовый клиент',
        'title': r['text'][:50] + '...',
        'product_category': 'Повседневные финансы и платежи, Кредитование'  # Мультикатегории
    })

fake_df = pd.DataFrame(fake_csv_data)
fake_df.to_csv(r'C:\Users\danil\OneDrive\Документы\gazprombank_reviews_sravni\fake_gazprombank_reviews_classified.csv', index=False, sep=';', encoding='utf-8-sig')
print("Файл 'test_250_reviews.json' с 250 случайными отзывами и датами готов!")
print("Фейковый CSV 'fake_gazprombank_reviews_classified.csv' создан для теста дашборда (скопируйте в основной файл).")
